# this file overrides the application.properties in main

# for testing, set default profile to 'test':
spring.profiles.active= "test"
# defines default data.sql locations:
spring.sql.init.data-locations=classpath:data-test.sql

spring.datasource.url=jdbc:postgresql://localhost:5432/testing
spring.datasource.username=postgres
spring.datasource.password=admin

# to tell jpa which database to work
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# to see sql statements on our console when running app
spring.jpa.show-sql=true

# If the ddl-auto value is UPDATE then, hibernate checks for the table and columns. If a table does not exist,
# then it creates new tables and whereas if a column does not exist it creates new columns for it.
# if spring.jpa.hibernate.ddl-auto=create , and we don't have these tables in database, it throws error in first run
# but also creates related tables, other runs doesn't throw error. # update works as expected
spring.jpa.hibernate.ddl-auto=create
# to be able to create table via @Entity before loading data via data.sql file :
spring.jpa.defer-datasource-initialization=true
# uncomment this if you need to load data via data.sql file :
 spring.sql.init.mode=always


